{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","data","flex","display","flexDirection","width","flexWrap","a","createElement","title","className","rel","target","href","style","margin","allMarkdownRemark","edges","filter","edge","node","frontmatter","date","map","_ref2","type","key","id","client","fontWeight","role","excerpt","_ref3","dangerouslySetInnerHTML","__html","html","_ref4","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","render","children","func","Layout","gatsby_browser_entry_StaticQuery","Fragment","maxWidth","padding","paddingTop","_755544856"],"mappings":"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","file":"component---src-pages-index-js-0bdf6ace88487c29f383.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\n\nexport default ({ data }) => {\n  const flex = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    flexWrap: \"wrap\"\n  }\n  return (\n      <Layout>\n        <SEO title=\"Home\" />\n        <section>\n\n          <h1>Phil Sherwin-Nicholls&#59;<br/> a service designer<br/>&amp; digital technologist.</h1>\n          <p className=\"lead\">\n             He has worked with the UK Government, healthtechs, fintechs and global technology providers. He speaks about automation, digital transformation, innovation and user centred design.\n          </p>\n          <p className=\"lead\">\n            Blurring the lines between technology, data and design to solve wicked, population scale problems. He has the ability to create pixel perfect designs as well as zooming out to 30,000 feet to get a holistic viewpoint.\n          </p>\n          <p className=\"lead cta\">\n            <a rel=\"noreopener noreferrer\" target=\"_blank\" href=\"mailto:hey@philsn.co.uk\">Available for contracts</a> from mid-October.\n          </p>\n        </section>\n\n        <section\n          style={{\n            margin: \"3em 0\"\n          }}\n        >\n          <h3>Experience</h3>\n          <div>\n            {data.allMarkdownRemark.edges.filter(edge => !!edge.node.frontmatter.date).map(({ node }) => {\n              if(node.frontmatter.type === \"experience\"){\n              return (\n                  <ul key={node.id}>\n                    <li>\n                      {node.frontmatter.client}\n                      <br />\n                      <span\n                        style={{\n                          fontWeight: 300\n                        }}\n                      >\n                        {node.frontmatter.role}\n                      </span>\n                      <p>{node.frontmatter.excerpt}</p>\n                    </li>\n                  </ul>\n                )\n              }\n            }\n            )}\n          </div>\n        </section>\n        <section style={{margin: \"1.5em 0\"}}>\n          <h3>Talks &amp; workshops</h3>\n          <div>\n            {data.allMarkdownRemark.edges.map(({ node }) => {\n              if(node.frontmatter.type === \"speaking\"){\n                return (\n                  <div\n                    key={node.id}\n                    style={flex}\n                    dangerouslySetInnerHTML={{ __html: node.html }}>\n                  </div>\n                )}\n            })}\n          </div>\n        </section>\n        <section>\n          <h3>Links</h3>\n          {data.allMarkdownRemark.edges.map(( {node} ) => {\n            if (node.frontmatter.type === \"links\") {\n              return (\n              <div\n                key={node.id}\n                style={flex}\n                dangerouslySetInnerHTML={{ __html: node.html }}>\n              </div>\n            )}\n          })}\n        </section>\n      </Layout>\n  );\n};\nexport const query = graphql`\n  query {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            client\n            role\n            date\n            type\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}